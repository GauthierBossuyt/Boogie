version: "3.9"

services:
    database:
        build: ./database
        volumes:
            - ./database/src:/USR/database/src
        environment:
            CHOKIDAR_USEPOLLING: "true"
            PORT: ${DATABASE_PORT}
            POSTGRES_CONNECTION: ${POSTGRES_CONNECTION}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - "${DATABASE_PORT}:${DATABASE_PORT}"
        depends_on:
            pg:
                condition: service_healthy

    # frontend:
    #     container_name: frontend
    #     restart: always
    #     build: ./frontend
    #     ports:
    #         - "${FRONTEND_PORT}:3000"
    #     environment:
    #         API_PORT: ${BACKEND_PORT}
    #         CHOKIDAR_USEPOLLING: "true"
    #     volumes:
    #         - ./frontend:/USR/src/app
    #     depends_on:
    #         - backend

    backend:
        build: ./backend
        container_name: backend
        volumes:
            - ./backend/src:/USR/backend/src
        environment:
            CHOKIDAR_USEPOLLING: "true"
            PORT: ${BACKEND_PORT}
            SPOTIFY_CLIENT_ID: ${SPOTIFY_CLIENT_ID}
            SPOTIFY_SECRET: ${SPOTIFY_SECRET}
            SPOTIFY_REDIRECT_URI: ${SPOTIFY_REDIRECT_URI}
        ports:
            - "${BACKEND_PORT}:${BACKEND_PORT}"
        depends_on:
            - database

    pg:
        image: postgres:latest
        environment:
            - POSTGRES_USER
            - POSTGRES_PASSWORD
            - POSTGRES_DB
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U user -d Boogie"]
            interval: 5s
            timeout: 5s
            retries: 5
        ports:
            - 5432:5432
        volumes:
            - ./_volumes:/var/lib/postgresql/data
